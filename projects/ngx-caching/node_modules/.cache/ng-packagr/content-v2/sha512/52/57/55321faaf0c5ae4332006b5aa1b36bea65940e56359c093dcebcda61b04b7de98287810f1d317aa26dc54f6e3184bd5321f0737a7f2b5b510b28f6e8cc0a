{"hash":"d975f62ec222b5da101129987905fe4be64898b7","fesm2020":{"code":"import * as i0 from '@angular/core';\nimport { Injectable, Component, NgModule } from '@angular/core';\n\nclass NgxCachingService {\n    constructor() { }\n}\nNgxCachingService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgxCachingService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nNgxCachingService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgxCachingService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgxCachingService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }], ctorParameters: function () { return []; } });\n\nclass NgxCachingComponent {\n    constructor() { }\n    ngOnInit() {\n    }\n}\nNgxCachingComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgxCachingComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nNgxCachingComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.3\", type: NgxCachingComponent, selector: \"lib-ngx-caching\", ngImport: i0, template: `\n    <p>\n      ngx-caching works!\n    </p>\n  `, isInline: true });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgxCachingComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'lib-ngx-caching',\n                    template: `\n    <p>\n      ngx-caching works!\n    </p>\n  `,\n                    styles: []\n                }]\n        }], ctorParameters: function () { return []; } });\n\nclass NgxCachingModule {\n}\nNgxCachingModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgxCachingModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nNgxCachingModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgxCachingModule, declarations: [NgxCachingComponent], exports: [NgxCachingComponent] });\nNgxCachingModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgxCachingModule, imports: [[]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgxCachingModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        NgxCachingComponent\n                    ],\n                    imports: [],\n                    exports: [\n                        NgxCachingComponent\n                    ]\n                }]\n        }] });\n\nclass CacheService {\n    constructor() {\n        this.mapper = new Map();\n        this.loadPreferences();\n    }\n    get(key, object = false) {\n        if (this.mapper.has(key)) {\n            const item = this.mapper.get(key);\n            return object && item ? JSON.parse(item) : item;\n        }\n        return undefined;\n    }\n    getOrDefault(key, value, object = false) {\n        if (this.get(key) == null) {\n            this.set(key, value, object);\n            return value;\n        }\n        else\n            return this.get(key);\n    }\n    set(key, value, object = false) {\n        this.mapper.set(key, object ? JSON.stringify(value) : value);\n        localStorage.setItem(key, object ? JSON.stringify(value) : value);\n    }\n    loadPreferences() {\n        for (let index = 0; index < localStorage.length; index++) {\n            const cacheKey = localStorage.key(index) || '';\n            this.mapper.set(cacheKey, localStorage.getItem(cacheKey) || '');\n        }\n    }\n    clear() {\n        for (let index = 0; index < localStorage.length; index++) {\n            const cacheKey = localStorage.key(index) || '';\n            localStorage.removeItem(cacheKey);\n        }\n    }\n}\nCacheService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: CacheService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nCacheService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: CacheService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: CacheService, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return []; } });\n\n/*\n * Public API Surface of ngx-caching\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CacheService, NgxCachingComponent, NgxCachingModule, NgxCachingService };\n//# sourceMappingURL=ngx-caching.mjs.map\n","map":{"version":3,"file":"ngx-caching.mjs","sources":["../../../projects/ngx-caching/src/lib/ngx-caching.service.ts","../../../projects/ngx-caching/src/lib/ngx-caching.component.ts","../../../projects/ngx-caching/src/lib/ngx-caching.module.ts","../../../projects/ngx-caching/src/lib/services/cache/cache.service.ts","../../../projects/ngx-caching/src/public-api.ts","../../../projects/ngx-caching/src/ngx-caching.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxCachingService {\n\n  constructor() { }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lib-ngx-caching',\n  template: `\n    <p>\n      ngx-caching works!\n    </p>\n  `,\n  styles: [\n  ]\n})\nexport class NgxCachingComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { NgxCachingComponent } from './ngx-caching.component';\n\n\n\n@NgModule({\n  declarations: [\n    NgxCachingComponent\n  ],\n  imports: [\n  ],\n  exports: [\n    NgxCachingComponent\n  ]\n})\nexport class NgxCachingModule { }\n","import {Injectable} from '@angular/core';\n\n@Injectable()\nexport class CacheService {\n  private readonly mapper: Map<string, string>;\n\n  constructor() {\n    this.mapper = new Map<string, string>();\n    this.loadPreferences()\n  }\n\n  get(key: string, object: boolean = false): any {\n    if (this.mapper.has(key)) {\n      const item = this.mapper.get(key);\n      return object && item ? JSON.parse(item) : item;\n    }\n    return undefined;\n  }\n\n  getOrDefault(key: string, value: any, object: boolean = false): any {\n    if (this.get(key) == null) {\n      this.set(key, value, object);\n      return value;\n    } else return this.get(key);\n  }\n\n  set(key: string, value: any, object: boolean = false) {\n    this.mapper.set(key, object ? JSON.stringify(value) : value)\n    localStorage.setItem(key, object ? JSON.stringify(value) : value);\n  }\n\n  private loadPreferences() {\n    for (let index = 0; index < localStorage.length; index++) {\n      const cacheKey = localStorage.key(index) || '';\n      this.mapper.set(cacheKey, localStorage.getItem(cacheKey) || '');\n    }\n  }\n\n  clear() {\n    for (let index = 0; index < localStorage.length; index++) {\n      const cacheKey = localStorage.key(index) || '';\n      localStorage.removeItem(cacheKey);\n    }\n  }\n}\n","/*\n * Public API Surface of ngx-caching\n */\n\nexport * from './lib/ngx-caching.service';\nexport * from './lib/ngx-caching.component';\nexport * from './lib/ngx-caching.module';\n\nexport * from './lib/services/cache/cache.service';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":";;;MAKa,iBAAiB;IAE5B,iBAAiB;;8GAFN,iBAAiB;kHAAjB,iBAAiB,cAFhB,MAAM;2FAEP,iBAAiB;kBAH7B,UAAU;mBAAC;oBACV,UAAU,EAAE,MAAM;iBACnB;;;MCQY,mBAAmB;IAE9B,iBAAiB;IAEjB,QAAQ;KACP;;gHALU,mBAAmB;oGAAnB,mBAAmB,uDARpB;;;;GAIT;2FAIU,mBAAmB;kBAV/B,SAAS;mBAAC;oBACT,QAAQ,EAAE,iBAAiB;oBAC3B,QAAQ,EAAE;;;;GAIT;oBACD,MAAM,EAAE,EACP;iBACF;;;MCIY,gBAAgB;;6GAAhB,gBAAgB;8GAAhB,gBAAgB,iBARzB,mBAAmB,aAKnB,mBAAmB;8GAGV,gBAAgB,YANlB,EACR;2FAKU,gBAAgB;kBAV5B,QAAQ;mBAAC;oBACR,YAAY,EAAE;wBACZ,mBAAmB;qBACpB;oBACD,OAAO,EAAE,EACR;oBACD,OAAO,EAAE;wBACP,mBAAmB;qBACpB;iBACF;;;MCXY,YAAY;IAGvB;QACE,IAAI,CAAC,MAAM,GAAG,IAAI,GAAG,EAAkB,CAAC;QACxC,IAAI,CAAC,eAAe,EAAE,CAAA;KACvB;IAED,GAAG,CAAC,GAAW,EAAE,SAAkB,KAAK;QACtC,IAAI,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE;YACxB,MAAM,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YAClC,OAAO,MAAM,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC;SACjD;QACD,OAAO,SAAS,CAAC;KAClB;IAED,YAAY,CAAC,GAAW,EAAE,KAAU,EAAE,SAAkB,KAAK;QAC3D,IAAI,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,IAAI,EAAE;YACzB,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC;YAC7B,OAAO,KAAK,CAAC;SACd;;YAAM,OAAO,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;KAC7B;IAED,GAAG,CAAC,GAAW,EAAE,KAAU,EAAE,SAAkB,KAAK;QAClD,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC,CAAA;QAC5D,YAAY,CAAC,OAAO,CAAC,GAAG,EAAE,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC,CAAC;KACnE;IAEO,eAAe;QACrB,KAAK,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,YAAY,CAAC,MAAM,EAAE,KAAK,EAAE,EAAE;YACxD,MAAM,QAAQ,GAAG,YAAY,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;YAC/C,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,QAAQ,EAAE,YAAY,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC,CAAC;SACjE;KACF;IAED,KAAK;QACH,KAAK,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,YAAY,CAAC,MAAM,EAAE,KAAK,EAAE,EAAE;YACxD,MAAM,QAAQ,GAAG,YAAY,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;YAC/C,YAAY,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;SACnC;KACF;;yGAxCU,YAAY;6GAAZ,YAAY;2FAAZ,YAAY;kBADxB,UAAU;;;ACFX;;;;ACAA;;;;;;"}},"fesm2015":{"code":"import * as i0 from '@angular/core';\nimport { Injectable, Component, NgModule } from '@angular/core';\n\nclass NgxCachingService {\n    constructor() { }\n}\nNgxCachingService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgxCachingService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nNgxCachingService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgxCachingService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgxCachingService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }], ctorParameters: function () { return []; } });\n\nclass NgxCachingComponent {\n    constructor() { }\n    ngOnInit() {\n    }\n}\nNgxCachingComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgxCachingComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nNgxCachingComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.3\", type: NgxCachingComponent, selector: \"lib-ngx-caching\", ngImport: i0, template: `\n    <p>\n      ngx-caching works!\n    </p>\n  `, isInline: true });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgxCachingComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'lib-ngx-caching',\n                    template: `\n    <p>\n      ngx-caching works!\n    </p>\n  `,\n                    styles: []\n                }]\n        }], ctorParameters: function () { return []; } });\n\nclass NgxCachingModule {\n}\nNgxCachingModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgxCachingModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nNgxCachingModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgxCachingModule, declarations: [NgxCachingComponent], exports: [NgxCachingComponent] });\nNgxCachingModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgxCachingModule, imports: [[]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: NgxCachingModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        NgxCachingComponent\n                    ],\n                    imports: [],\n                    exports: [\n                        NgxCachingComponent\n                    ]\n                }]\n        }] });\n\nclass CacheService {\n    constructor() {\n        this.mapper = new Map();\n        this.loadPreferences();\n    }\n    get(key, object = false) {\n        if (this.mapper.has(key)) {\n            const item = this.mapper.get(key);\n            return object && item ? JSON.parse(item) : item;\n        }\n        return undefined;\n    }\n    getOrDefault(key, value, object = false) {\n        if (this.get(key) == null) {\n            this.set(key, value, object);\n            return value;\n        }\n        else\n            return this.get(key);\n    }\n    set(key, value, object = false) {\n        this.mapper.set(key, object ? JSON.stringify(value) : value);\n        localStorage.setItem(key, object ? JSON.stringify(value) : value);\n    }\n    loadPreferences() {\n        for (let index = 0; index < localStorage.length; index++) {\n            const cacheKey = localStorage.key(index) || '';\n            this.mapper.set(cacheKey, localStorage.getItem(cacheKey) || '');\n        }\n    }\n    clear() {\n        for (let index = 0; index < localStorage.length; index++) {\n            const cacheKey = localStorage.key(index) || '';\n            localStorage.removeItem(cacheKey);\n        }\n    }\n}\nCacheService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: CacheService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nCacheService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: CacheService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: CacheService, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return []; } });\n\n/*\n * Public API Surface of ngx-caching\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CacheService, NgxCachingComponent, NgxCachingModule, NgxCachingService };\n//# sourceMappingURL=ngx-caching.mjs.map\n","map":{"version":3,"file":"ngx-caching.mjs","sources":["../../../projects/ngx-caching/src/lib/ngx-caching.service.ts","../../../projects/ngx-caching/src/lib/ngx-caching.component.ts","../../../projects/ngx-caching/src/lib/ngx-caching.module.ts","../../../projects/ngx-caching/src/lib/services/cache/cache.service.ts","../../../projects/ngx-caching/src/public-api.ts","../../../projects/ngx-caching/src/ngx-caching.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxCachingService {\n\n  constructor() { }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lib-ngx-caching',\n  template: `\n    <p>\n      ngx-caching works!\n    </p>\n  `,\n  styles: [\n  ]\n})\nexport class NgxCachingComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { NgxCachingComponent } from './ngx-caching.component';\n\n\n\n@NgModule({\n  declarations: [\n    NgxCachingComponent\n  ],\n  imports: [\n  ],\n  exports: [\n    NgxCachingComponent\n  ]\n})\nexport class NgxCachingModule { }\n","import {Injectable} from '@angular/core';\n\n@Injectable()\nexport class CacheService {\n  private readonly mapper: Map<string, string>;\n\n  constructor() {\n    this.mapper = new Map<string, string>();\n    this.loadPreferences()\n  }\n\n  get(key: string, object: boolean = false): any {\n    if (this.mapper.has(key)) {\n      const item = this.mapper.get(key);\n      return object && item ? JSON.parse(item) : item;\n    }\n    return undefined;\n  }\n\n  getOrDefault(key: string, value: any, object: boolean = false): any {\n    if (this.get(key) == null) {\n      this.set(key, value, object);\n      return value;\n    } else return this.get(key);\n  }\n\n  set(key: string, value: any, object: boolean = false) {\n    this.mapper.set(key, object ? JSON.stringify(value) : value)\n    localStorage.setItem(key, object ? JSON.stringify(value) : value);\n  }\n\n  private loadPreferences() {\n    for (let index = 0; index < localStorage.length; index++) {\n      const cacheKey = localStorage.key(index) || '';\n      this.mapper.set(cacheKey, localStorage.getItem(cacheKey) || '');\n    }\n  }\n\n  clear() {\n    for (let index = 0; index < localStorage.length; index++) {\n      const cacheKey = localStorage.key(index) || '';\n      localStorage.removeItem(cacheKey);\n    }\n  }\n}\n","/*\n * Public API Surface of ngx-caching\n */\n\nexport * from './lib/ngx-caching.service';\nexport * from './lib/ngx-caching.component';\nexport * from './lib/ngx-caching.module';\n\nexport * from './lib/services/cache/cache.service';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":";;;MAKa,iBAAiB;IAE5B,iBAAiB;;8GAFN,iBAAiB;kHAAjB,iBAAiB,cAFhB,MAAM;2FAEP,iBAAiB;kBAH7B,UAAU;mBAAC;oBACV,UAAU,EAAE,MAAM;iBACnB;;;MCQY,mBAAmB;IAE9B,iBAAiB;IAEjB,QAAQ;KACP;;gHALU,mBAAmB;oGAAnB,mBAAmB,uDARpB;;;;GAIT;2FAIU,mBAAmB;kBAV/B,SAAS;mBAAC;oBACT,QAAQ,EAAE,iBAAiB;oBAC3B,QAAQ,EAAE;;;;GAIT;oBACD,MAAM,EAAE,EACP;iBACF;;;MCIY,gBAAgB;;6GAAhB,gBAAgB;8GAAhB,gBAAgB,iBARzB,mBAAmB,aAKnB,mBAAmB;8GAGV,gBAAgB,YANlB,EACR;2FAKU,gBAAgB;kBAV5B,QAAQ;mBAAC;oBACR,YAAY,EAAE;wBACZ,mBAAmB;qBACpB;oBACD,OAAO,EAAE,EACR;oBACD,OAAO,EAAE;wBACP,mBAAmB;qBACpB;iBACF;;;MCXY,YAAY;IAGvB;QACE,IAAI,CAAC,MAAM,GAAG,IAAI,GAAG,EAAkB,CAAC;QACxC,IAAI,CAAC,eAAe,EAAE,CAAA;KACvB;IAED,GAAG,CAAC,GAAW,EAAE,SAAkB,KAAK;QACtC,IAAI,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE;YACxB,MAAM,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YAClC,OAAO,MAAM,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC;SACjD;QACD,OAAO,SAAS,CAAC;KAClB;IAED,YAAY,CAAC,GAAW,EAAE,KAAU,EAAE,SAAkB,KAAK;QAC3D,IAAI,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,IAAI,EAAE;YACzB,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC;YAC7B,OAAO,KAAK,CAAC;SACd;;YAAM,OAAO,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;KAC7B;IAED,GAAG,CAAC,GAAW,EAAE,KAAU,EAAE,SAAkB,KAAK;QAClD,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC,CAAA;QAC5D,YAAY,CAAC,OAAO,CAAC,GAAG,EAAE,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC,CAAC;KACnE;IAEO,eAAe;QACrB,KAAK,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,YAAY,CAAC,MAAM,EAAE,KAAK,EAAE,EAAE;YACxD,MAAM,QAAQ,GAAG,YAAY,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;YAC/C,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,QAAQ,EAAE,YAAY,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC,CAAC;SACjE;KACF;IAED,KAAK;QACH,KAAK,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,YAAY,CAAC,MAAM,EAAE,KAAK,EAAE,EAAE;YACxD,MAAM,QAAQ,GAAG,YAAY,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;YAC/C,YAAY,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;SACnC;KACF;;yGAxCU,YAAY;6GAAZ,YAAY;2FAAZ,YAAY;kBADxB,UAAU;;;ACFX;;;;ACAA;;;;;;"}}}